import { readFile, writeFile } from 'fs/promises';
import yargs from 'yargs';
import { handleWorkingDirectory } from '../../lib/handleWorkingDirectory';
import { verbose } from '../../utils';
import { ChangeReport } from '../compare/ChangeReport';
import MarkdownReport from './MarkdownReport';

export const command = 'compare-report <report-directory>';
export const describe =
  'Generate a report document from comparison data generated by the compare command.';

export const builder = (args: yargs.Argv) => {
  args.positional('report-directory', {
    describe: 'directory containing the comparison data',
    type: 'string',
    demandOption: true,
  });

  args.option('directory', {
    describe: 'program working directory',
    type: 'string',
    alias: 'd',
  });

  return args.strict();
};

export const handler = async (argv: any) => {
  verbose(argv.verbose);
  const { directory } = argv;
  handleWorkingDirectory(directory);

  const baseDir = process.cwd();

  const { reportDirectory } = argv;
  process.chdir(reportDirectory);

  const report = JSON.parse(await readFile('change-report.json', 'utf-8')) as ChangeReport;
  const reportMD = await new MarkdownReport().generateReport(report, baseDir);
  await writeFile('report.md', reportMD);
};
