{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "illegal-package-dependency",
        "properties": {
          "callerPackages": [
            {
              "equal": "actionpack"
            },
            {
              "equal": "activesupport"
            }
          ],
          "calleePackage": {
            "equal": "app/controllers"
          }
        }
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-authentication"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unbatched-materialized-query"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1694376269516.6267
  },
  "appMapMetadata": {
    "appmapFile": {
      "app": "sample_app_6th_ed",
      "language": {
        "name": "ruby",
        "engine": "ruby",
        "version": "3.0.2"
      },
      "client": {
        "name": "appmap",
        "url": "https://github.com/applandinc/appmap-ruby",
        "version": "0.101.0"
      },
      "frameworks": [
        {
          "name": "rails",
          "version": "6.0.4.1"
        },
        {
          "name": "minitest",
          "version": "5.11.3"
        }
      ],
      "git": {
        "repository": "https://github.com/land-of-apps/sample_app_6th_ed",
        "branch": "HEAD",
        "commit": "7b255b2478f1a8a8c70b3d8adb52cd858397c38a",
        "git_last_annotated_tag": null,
        "git_last_tag": null,
        "git_commits_since_last_annotated_tag": null,
        "git_commits_since_last_tag": null
      },
      "name": "Users_signup valid signup information with account activation",
      "source_location": "test/integration/users_signup_test.rb:22",
      "recorder": {
        "name": "minitest",
        "type": "tests"
      },
      "test_status": "succeeded"
    }
  },
  "findings": [
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "secret-in-log",
      "ruleId": "secret-in-log",
      "ruleTitle": "Secret in log",
      "event": {
        "id": 704,
        "event": "call",
        "thread_id": 4460,
        "defined_class": "Logger::LogDevice",
        "method_id": "write",
        "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
        "lineno": 31,
        "static": false,
        "parameters": [
          {
            "name": "message",
            "class": "String",
            "object_id": 97840,
            "value": "Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=wrong\" for 127.0.0.1 at 2023-09- (...18 more characters)",
            "kind": "req"
          }
        ],
        "receiver": {
          "class": "Logger::LogDevice",
          "object_id": 13760,
          "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
        }
      },
      "hash": "e82963cbf249f6dffc4d8696ff1093f525698c239a5ea794224cfa8790414002",
      "hash_v2": "c3b296f0049b9f08ea79d9df8fba74341575a30de6b5f39da0a8762c334cdc0b",
      "stack": [
        "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb:31"
      ],
      "scope": {
        "id": 697,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=hptz57GW%2Flp63w%2BiZBRP3EvVGJsJ8gTyYJjQlDHnMQSRfQq5PNs2f83bkQvdi8K6ah2Uc%2FX8SKdkfqUOTH3ZiFY%2FNnyI02hwwE7IehhzibVLMd2E9PLQJMSLkXH2whiQiApLbkDloBBVrk11TG%2B3KThcqEHt4M1k%2FsAKvUTFhhfz4vOcG07gSVL%2F5f4IVzo759l4Ap8PZ4wHw%2BDGGAMOHOrkzSqt1B0WKXfec%2BlUye0DFMqeqUycWuT2CmsxANG%2FSKtKaQEMSUxCalIfKs5ISIu9t%2F8d2SxQ3Lh5ZuOPbU3T%2FuKc%2FYAe--wjTIO5zgV2fN810N--O5avJXt5CKXHpT49iXznpQ%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "wrong",
            "object_id": 107160
          }
        ]
      },
      "message": "Log message contains secret User.new_activation_token \"7Jgdj4mjIIWebMP5M97Xwg\": Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=wrong\" for 127.0.0.1 at 2023-09- (...18 more characters)",
      "relatedEvents": [
        {
          "id": 704,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "Logger::LogDevice",
          "method_id": "write",
          "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
          "lineno": 31,
          "static": false,
          "parameters": [
            {
              "name": "message",
              "class": "String",
              "object_id": 97840,
              "value": "Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=wrong\" for 127.0.0.1 at 2023-09- (...18 more characters)",
              "kind": "req"
            }
          ],
          "receiver": {
            "class": "Logger::LogDevice",
            "object_id": 13760,
            "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
          }
        },
        {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {
        "generatorEvent": {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "secret-in-log",
      "ruleId": "secret-in-log",
      "ruleTitle": "Secret in log",
      "event": {
        "id": 709,
        "event": "call",
        "thread_id": 4460,
        "defined_class": "Logger::LogDevice",
        "method_id": "write",
        "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
        "lineno": 31,
        "static": false,
        "parameters": [
          {
            "name": "message",
            "class": "String",
            "object_id": 97940,
            "value": "  Parameters: {\"email\"=>\"wrong\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
            "kind": "req"
          }
        ],
        "receiver": {
          "class": "Logger::LogDevice",
          "object_id": 13760,
          "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
        }
      },
      "hash": "e82963cbf249f6dffc4d8696ff1093f525698c239a5ea794224cfa8790414002",
      "hash_v2": "4f012b5f96a448545f8bc0393e2599e034baf41b107545eec9f02bf362785271",
      "stack": [
        "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb:31",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/instrumentation.rb:19"
      ],
      "scope": {
        "id": 697,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=hptz57GW%2Flp63w%2BiZBRP3EvVGJsJ8gTyYJjQlDHnMQSRfQq5PNs2f83bkQvdi8K6ah2Uc%2FX8SKdkfqUOTH3ZiFY%2FNnyI02hwwE7IehhzibVLMd2E9PLQJMSLkXH2whiQiApLbkDloBBVrk11TG%2B3KThcqEHt4M1k%2FsAKvUTFhhfz4vOcG07gSVL%2F5f4IVzo759l4Ap8PZ4wHw%2BDGGAMOHOrkzSqt1B0WKXfec%2BlUye0DFMqeqUycWuT2CmsxANG%2FSKtKaQEMSUxCalIfKs5ISIu9t%2F8d2SxQ3Lh5ZuOPbU3T%2FuKc%2FYAe--wjTIO5zgV2fN810N--O5avJXt5CKXHpT49iXznpQ%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "wrong",
            "object_id": 107160
          }
        ]
      },
      "message": "Log message contains secret User.new_activation_token \"7Jgdj4mjIIWebMP5M97Xwg\":   Parameters: {\"email\"=>\"wrong\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
      "relatedEvents": [
        {
          "id": 709,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "Logger::LogDevice",
          "method_id": "write",
          "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
          "lineno": 31,
          "static": false,
          "parameters": [
            {
              "name": "message",
              "class": "String",
              "object_id": 97940,
              "value": "  Parameters: {\"email\"=>\"wrong\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
              "kind": "req"
            }
          ],
          "receiver": {
            "class": "Logger::LogDevice",
            "object_id": 13760,
            "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
          }
        },
        {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {
        "generatorEvent": {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "secret-in-log",
      "ruleId": "secret-in-log",
      "ruleTitle": "Secret in log",
      "event": {
        "id": 814,
        "event": "call",
        "thread_id": 4460,
        "defined_class": "Logger::LogDevice",
        "method_id": "write",
        "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
        "lineno": 31,
        "static": false,
        "parameters": [
          {
            "name": "message",
            "class": "String",
            "object_id": 99180,
            "value": "Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=user%40example.com\" for 127.0.0. (...31 more characters)",
            "kind": "req"
          }
        ],
        "receiver": {
          "class": "Logger::LogDevice",
          "object_id": 13760,
          "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
        }
      },
      "hash": "e82963cbf249f6dffc4d8696ff1093f525698c239a5ea794224cfa8790414002",
      "hash_v2": "c3b296f0049b9f08ea79d9df8fba74341575a30de6b5f39da0a8762c334cdc0b",
      "stack": [
        "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb:31"
      ],
      "scope": {
        "id": 807,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 107180
          }
        ]
      },
      "message": "Log message contains secret User.new_activation_token \"7Jgdj4mjIIWebMP5M97Xwg\": Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=user%40example.com\" for 127.0.0. (...31 more characters)",
      "relatedEvents": [
        {
          "id": 814,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "Logger::LogDevice",
          "method_id": "write",
          "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
          "lineno": 31,
          "static": false,
          "parameters": [
            {
              "name": "message",
              "class": "String",
              "object_id": 99180,
              "value": "Started GET \"/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit?email=user%40example.com\" for 127.0.0. (...31 more characters)",
              "kind": "req"
            }
          ],
          "receiver": {
            "class": "Logger::LogDevice",
            "object_id": 13760,
            "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
          }
        },
        {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {
        "generatorEvent": {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "secret-in-log",
      "ruleId": "secret-in-log",
      "ruleTitle": "Secret in log",
      "event": {
        "id": 819,
        "event": "call",
        "thread_id": 4460,
        "defined_class": "Logger::LogDevice",
        "method_id": "write",
        "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
        "lineno": 31,
        "static": false,
        "parameters": [
          {
            "name": "message",
            "class": "String",
            "object_id": 99280,
            "value": "  Parameters: {\"email\"=>\"user@example.com\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
            "kind": "req"
          }
        ],
        "receiver": {
          "class": "Logger::LogDevice",
          "object_id": 13760,
          "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
        }
      },
      "hash": "e82963cbf249f6dffc4d8696ff1093f525698c239a5ea794224cfa8790414002",
      "hash_v2": "4f012b5f96a448545f8bc0393e2599e034baf41b107545eec9f02bf362785271",
      "stack": [
        "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb:31",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/instrumentation.rb:19"
      ],
      "scope": {
        "id": 807,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 107180
          }
        ]
      },
      "message": "Log message contains secret User.new_activation_token \"7Jgdj4mjIIWebMP5M97Xwg\":   Parameters: {\"email\"=>\"user@example.com\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
      "relatedEvents": [
        {
          "id": 819,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "Logger::LogDevice",
          "method_id": "write",
          "path": "/opt/hostedtoolcache/Ruby/3.0.2/x64/lib/ruby/3.0.0/logger/log_device.rb",
          "lineno": 31,
          "static": false,
          "parameters": [
            {
              "name": "message",
              "class": "String",
              "object_id": 99280,
              "value": "  Parameters: {\"email\"=>\"user@example.com\", \"id\"=>\"7Jgdj4mjIIWebMP5M97Xwg\"}\n",
              "kind": "req"
            }
          ],
          "receiver": {
            "class": "Logger::LogDevice",
            "object_id": 13760,
            "value": "#<Logger::LogDevice:0x000056212e8cc9b8>"
          }
        },
        {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {
        "generatorEvent": {
          "id": 358,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "User",
          "method_id": "new_activation_token",
          "path": "app/models/user.rb",
          "lineno": 35,
          "static": true,
          "receiver": {
            "class": "Class",
            "object_id": 25980,
            "value": "User"
          }
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "update-in-get-request",
      "ruleId": "update-in-get-request",
      "ruleTitle": "Data update performed in GET or HEAD request",
      "event": {
        "id": 877,
        "event": "call",
        "thread_id": 4460,
        "sql_query": {
          "sql": "UPDATE \"users\" SET \"activated\" = ?, \"updated_at\" = ? WHERE \"users\".\"id\" = ?",
          "database_type": "sqlite"
        }
      },
      "hash": "085250d14b4eda3fc82725f4216a9f0f6732f09f97bfc4ac9cdc2ca89fbfbfb3",
      "hash_v2": "0cd8e6544a38bc99297dcb906524ffa7cbdd71cad1d8e2b8b8056ffc84b0d4fe",
      "stack": [
        "app/models/user.rb:73",
        "app/controllers/account_activations_controller.rb:5",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/instrumentation.rb:19"
      ],
      "scope": {
        "id": 807,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 107180
          }
        ]
      },
      "message": "Data update performed in HTTP request GET /account_activations/{id}/edit: UPDATE \"users\" SET \"activated\" = ?, \"updated_at\" = ? WHERE \"users\".\"id\" = ?",
      "relatedEvents": [
        {
          "id": 877,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "UPDATE \"users\" SET \"activated\" = ?, \"updated_at\" = ? WHERE \"users\".\"id\" = ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 807,
          "event": "call",
          "thread_id": 4460,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 107180
            }
          ]
        }
      ],
      "impactDomain": "Maintainability",
      "participatingEvents": {
        "request": {
          "id": 807,
          "event": "call",
          "thread_id": 4460,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 107180
            }
          ]
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_signup_valid_signup_information_with_account_activation.appmap.json",
      "checkId": "update-in-get-request",
      "ruleId": "update-in-get-request",
      "ruleTitle": "Data update performed in GET or HEAD request",
      "event": {
        "id": 901,
        "event": "call",
        "thread_id": 4460,
        "sql_query": {
          "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
          "database_type": "sqlite"
        }
      },
      "hash": "60031256ab72237f92296fefba2733dc85d36c4bf7f5f31a558286117ca66e43",
      "hash_v2": "dec2f1f3aeaf200346646793c43adbd4ae255cc04fb2b9d09d0a4b24864ab924",
      "stack": [
        "app/models/user.rb:73",
        "app/controllers/account_activations_controller.rb:5",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/instrumentation.rb:19"
      ],
      "scope": {
        "id": 807,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
          "normalized_path_info": "/account_activations/{id}/edit",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
            "Content-Length": "0"
          }
        },
        "message": [
          {
            "name": "email",
            "class": "String",
            "value": "user@example.com",
            "object_id": 107180
          }
        ]
      },
      "message": "Data update performed in HTTP request GET /account_activations/{id}/edit: UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
      "relatedEvents": [
        {
          "id": 901,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "UPDATE \"users\" SET \"updated_at\" = ?, \"activated_at\" = ? WHERE \"users\".\"id\" = ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 807,
          "event": "call",
          "thread_id": 4460,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 107180
            }
          ]
        }
      ],
      "impactDomain": "Maintainability",
      "participatingEvents": {
        "request": {
          "id": 807,
          "event": "call",
          "thread_id": 4460,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/account_activations/7Jgdj4mjIIWebMP5M97Xwg/edit",
            "normalized_path_info": "/account_activations/{id}/edit",
            "headers": {
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Cookie": "_sample_app_session=ufXApO5pNwzPGpwbslWedjFDCqvFsbsb7k5n7ZtCWHhNI3tDW7vo1jUJ23qpflahX0XwNRvNTIrWwcyPPKJzK%2BbmZEjawqIUkTKarCosNmlEgUSBDUAGEUFsuI5nxG2xAOg20AsMcPTNaJpUfz7A6cmI95AMi8s6yOShlsImnqzhLKP6aRsdRfmIGrRWav%2F6FiBVHGsphMxffaIFXPyuVc4ugtrj9O1o8rUr4c5kze8ApwzAl2WBEw3hUOdArGZfwyYMRZ2utnae0%2Ba5Z1BW2WOL5pPMwXHP5JhGenTgA840xLh8Wbtt--KJVFbsJZGdNkNtAk--TWME1zPjRIg3l6I%2B1HkU6g%3D%3D",
              "Content-Length": "0"
            }
          },
          "message": [
            {
              "name": "email",
              "class": "String",
              "value": "user@example.com",
              "object_id": 107180
            }
          ]
        }
      },
      "scopeModifiedDate": "2023-09-10T20:02:46.000Z",
      "eventsModifiedDate": "2023-09-10T20:02:46.000Z"
    }
  ],
  "checks": [
    {
      "id": "authz-before-authn",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        }
      }
    },
    {
      "id": "deserialization-of-untrusted-data",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        }
      }
    },
    {
      "id": "exec-of-untrusted-command",
      "scope": "command",
      "impactDomain": "Security",
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        }
      }
    },
    {
      "id": "http-500",
      "scope": "http_server_request",
      "impactDomain": "Stability",
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      }
    },
    {
      "id": "illegal-package-dependency",
      "scope": "command",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "illegal-package-dependency",
        "title": "Illegal use of code by a non-whitelisted package",
        "description": "Ensures that all calls to a specified `callee` package come from an approved `caller` package. This is a way of defining and enforcing an architectural constraint that may not be provided by the programming language itself.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#illegal-package-dependency",
        "labels": [],
        "enumerateScope": true,
        "references": {
          "CWE-1120": "https://cwe.mitre.org/data/definitions/1120.html",
          "CWE-1154": "https://cwe.mitre.org/data/definitions/1154.html"
        }
      }
    },
    {
      "id": "logout-without-session-reset",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        }
      }
    },
    {
      "id": "missing-authentication",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "missing-authentication",
        "title": "Unauthenticated HTTP server request",
        "description": "An HTTP server request is missing authentication. In this case, the request may be serving assets that should be protected by authentication - but no authentication is actually happening.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-authentication",
        "labels": [
          "access.public",
          "security.authentication"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-306": "https://cwe.mitre.org/data/definitions/306.html"
        }
      }
    },
    {
      "id": "missing-content-type",
      "scope": "http_server_request",
      "impactDomain": "Stability",
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type",
        "labels": [],
        "enumerateScope": false,
        "references": {}
      }
    },
    {
      "id": "n-plus-one-query",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        }
      }
    },
    {
      "id": "secret-in-log",
      "scope": "root",
      "impactDomain": "Security",
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log",
        "labels": [
          "secret",
          "log"
        ],
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        }
      }
    },
    {
      "id": "too-many-joins",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      }
    },
    {
      "id": "too-many-updates",
      "scope": "command",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        }
      }
    },
    {
      "id": "unbatched-materialized-query",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "unbatched-materialized-query",
        "title": "Unbatched materialized SQL query",
        "description": "Finds large data sets that are queried from the database and loaded into memory.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unbatched-materialized-query",
        "labels": [
          "dao.materialize"
        ],
        "enumerateScope": true,
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      }
    },
    {
      "id": "update-in-get-request",
      "scope": "http_server_request",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request",
        "labels": [
          "audit"
        ],
        "enumerateScope": true,
        "references": {}
      }
    }
  ]
}