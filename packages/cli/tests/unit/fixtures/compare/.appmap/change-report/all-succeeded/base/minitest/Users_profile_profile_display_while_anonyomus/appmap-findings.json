{
  "configuration": {
    "checks": [
      {
        "rule": "authz-before-authn"
      },
      {
        "rule": "deserialization-of-untrusted-data"
      },
      {
        "rule": "exec-of-untrusted-command"
      },
      {
        "rule": "http-500"
      },
      {
        "rule": "illegal-package-dependency",
        "properties": {
          "callerPackages": [
            {
              "equal": "actionpack"
            },
            {
              "equal": "activesupport"
            }
          ],
          "calleePackage": {
            "equal": "app/controllers"
          }
        }
      },
      {
        "rule": "logout-without-session-reset"
      },
      {
        "rule": "missing-authentication"
      },
      {
        "rule": "missing-content-type"
      },
      {
        "rule": "n-plus-one-query"
      },
      {
        "rule": "secret-in-log"
      },
      {
        "rule": "too-many-joins"
      },
      {
        "rule": "too-many-updates"
      },
      {
        "rule": "unbatched-materialized-query"
      },
      {
        "rule": "update-in-get-request"
      }
    ],
    "timestampMs": 1694307727975.4485
  },
  "appMapMetadata": {
    "appmapFile": {
      "app": "sample_app_6th_ed",
      "language": {
        "name": "ruby",
        "engine": "ruby",
        "version": "3.0.2"
      },
      "client": {
        "name": "appmap",
        "url": "https://github.com/applandinc/appmap-ruby",
        "version": "0.102.1"
      },
      "frameworks": [
        {
          "name": "rails",
          "version": "6.0.4.1"
        },
        {
          "name": "minitest",
          "version": "5.11.3"
        }
      ],
      "git": {
        "repository": "https://github.com/land-of-apps/sample_app_6th_ed",
        "branch": "appmap-e2e",
        "commit": "9745c3074776f1c102f193eec2a80ed7153a1412",
        "git_last_annotated_tag": null,
        "git_last_tag": null,
        "git_commits_since_last_annotated_tag": null,
        "git_commits_since_last_tag": null
      },
      "name": "Users_profile profile display while anonyomus",
      "source_location": "test/integration/users_profile_test.rb:18",
      "recorder": {
        "name": "minitest",
        "type": "tests"
      },
      "test_status": "succeeded"
    }
  },
  "findings": [
    {
      "appMapFile": "tmp/appmap/minitest/Users_profile_profile_display_while_anonyomus.appmap.json",
      "checkId": "missing-authentication",
      "ruleId": "missing-authentication",
      "ruleTitle": "Unauthenticated HTTP server request",
      "event": {
        "id": 29,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/users/762146111",
          "normalized_path_info": "/users/{id}",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Content-Length": "0"
          }
        }
      },
      "hash": "71d78423f522bdb8faaef33948567ddf2a4509a89e521947fba89d25632eae56",
      "hash_v2": "d84f6ef0e5f0706fa98adcdeddb7e5bd81363b425118bf6503006330e87e5d85",
      "stack": [],
      "scope": {
        "id": 29,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/users/762146111",
          "normalized_path_info": "/users/{id}",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Content-Length": "0"
          }
        }
      },
      "message": "Unauthenticated HTTP server request: GET /users/{id}",
      "relatedEvents": [
        {
          "id": 29,
          "event": "call",
          "thread_id": 4460,
          "http_server_request": {
            "request_method": "GET",
            "path_info": "/users/762146111",
            "normalized_path_info": "/users/{id}",
            "headers": {
              "Host": "www.example.com",
              "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
              "Content-Length": "0"
            }
          }
        }
      ],
      "impactDomain": "Security",
      "participatingEvents": {},
      "scopeModifiedDate": "2023-09-05T17:46:00.000Z"
    },
    {
      "appMapFile": "tmp/appmap/minitest/Users_profile_profile_display_while_anonyomus.appmap.json",
      "checkId": "n-plus-one-query",
      "ruleId": "n-plus-one-query",
      "ruleTitle": "N plus 1 SQL query",
      "event": {
        "id": 118,
        "event": "call",
        "thread_id": 4460,
        "sql_query": {
          "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
          "database_type": "sqlite"
        }
      },
      "hash": "85e714418ac26ab2ed674c83d9031766976b4a5f9047d0b462b781651334ad7c",
      "hash_v2": "5e45ba35b57a3ec7ddb97f8ed8f7ae3834a4019fbdc07940c72beaeeac61f9eb",
      "stack": [
        "app/views/microposts/_micropost.html.erb",
        "app/views/users/show.html.erb",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/renderers.rb:141",
        "vendor/bundle/ruby/3.0.0/gems/actionpack-6.0.4.1/lib/action_controller/metal/instrumentation.rb:19"
      ],
      "scope": {
        "id": 29,
        "event": "call",
        "thread_id": 4460,
        "http_server_request": {
          "request_method": "GET",
          "path_info": "/users/762146111",
          "normalized_path_info": "/users/{id}",
          "headers": {
            "Host": "www.example.com",
            "Accept": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5",
            "Content-Length": "0"
          }
        }
      },
      "message": "app_views_microposts__micropost_html_erb.render[107] contains 30 occurrences of SQL: SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
      "groupMessage": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
      "occurranceCount": 30,
      "relatedEvents": [
        {
          "id": 118,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 132,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 146,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 160,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 174,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 188,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 202,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 216,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 230,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 244,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 258,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 272,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 286,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 300,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 314,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 328,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 342,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 356,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 370,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 384,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 398,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 412,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 426,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 440,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 454,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 468,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 482,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 496,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 510,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 524,
          "event": "call",
          "thread_id": 4460,
          "sql_query": {
            "sql": "SELECT \"active_storage_attachments\".* FROM \"active_storage_attachments\" WHERE \"active_storage_attachments\".\"record_id\" = ? AND \"active_storage_attachments\".\"record_type\" = ? AND \"active_storage_attachments\".\"name\" = ? LIMIT ?",
            "database_type": "sqlite"
          }
        },
        {
          "id": 107,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "app_views_microposts__micropost_html_erb",
          "method_id": "render",
          "path": "app/views/microposts/_micropost.html.erb",
          "static": true,
          "receiver": {
            "class": "ActionView::PartialRenderer",
            "object_id": 112060,
            "value": "#<ActionView::PartialRenderer:0x00005651efdf76a8>"
          }
        }
      ],
      "impactDomain": "Performance",
      "participatingEvents": {
        "commonAncestor": {
          "id": 107,
          "event": "call",
          "thread_id": 4460,
          "defined_class": "app_views_microposts__micropost_html_erb",
          "method_id": "render",
          "path": "app/views/microposts/_micropost.html.erb",
          "static": true,
          "receiver": {
            "class": "ActionView::PartialRenderer",
            "object_id": 112060,
            "value": "#<ActionView::PartialRenderer:0x00005651efdf76a8>"
          }
        }
      },
      "scopeModifiedDate": "2023-09-05T17:46:00.000Z",
      "eventsModifiedDate": "2023-09-05T17:46:00.000Z"
    }
  ],
  "checks": [
    {
      "id": "authz-before-authn",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "authz-before-authn",
        "title": "Authorization performed before authentication",
        "description": "Determines when authorization logic is applied to a user identity that has not been properly verified. Because the the user's identity has not been verified yet, the outcome of the authorization check cannot be trusted. A malicious user might be able to get themselves authorized as a different user than they really are - or they may not be logged in at all.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#authz-before-authn",
        "labels": [
          "security.authorization",
          "security.authentication"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-863": "https://cwe.mitre.org/data/definitions/863.html"
        }
      }
    },
    {
      "id": "deserialization-of-untrusted-data",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "deserialization-of-untrusted-data",
        "title": "Deserialization of untrusted data",
        "description": "Finds occurrances of deserialization in which the mechanism employed is known to be unsafe, and the data comes from an untrusted source and hasn't passed through a sanitization mechanism.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#deserialization-of-untrusted-data",
        "labels": [
          "deserialize.unsafe",
          "deserialize.safe",
          "deserialize.sanitize"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-502": "https://cwe.mitre.org/data/definitions/502.html",
          "Ruby Security": "https://docs.ruby-lang.org/en/3.0/doc/security_rdoc.html"
        }
      }
    },
    {
      "id": "exec-of-untrusted-command",
      "scope": "command",
      "impactDomain": "Security",
      "rule": {
        "id": "exec-of-untrusted-command",
        "title": "Execution of untrusted system command",
        "description": "Find occurrances of system command execution in which the command string is not guaranteed to be safe.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#exec-of-untrusted-command",
        "labels": [
          "system.exec",
          "system.exec.safe",
          "system.exec.sanitize"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-78": "https://cwe.mitre.org/data/definitions/78.html"
        }
      }
    },
    {
      "id": "http-500",
      "scope": "http_server_request",
      "impactDomain": "Stability",
      "rule": {
        "id": "http-500",
        "title": "HTTP 500 status code",
        "description": "Identifies when an HTTP server request has returned a 500 status code. HTTP 500 status code generally indicate an unanticipated problem in the backend that is not handled in a predictable way. 500 status codes are also hard for client code to handle, because they don't indicate any particular problem or suggest a solution.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#http-500",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-392": "https://cwe.mitre.org/data/definitions/392.html"
        }
      }
    },
    {
      "id": "illegal-package-dependency",
      "scope": "command",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "illegal-package-dependency",
        "title": "Illegal use of code by a non-whitelisted package",
        "description": "Ensures that all calls to a specified `callee` package come from an approved `caller` package. This is a way of defining and enforcing an architectural constraint that may not be provided by the programming language itself.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#illegal-package-dependency",
        "labels": [],
        "enumerateScope": true,
        "references": {
          "CWE-1120": "https://cwe.mitre.org/data/definitions/1120.html",
          "CWE-1154": "https://cwe.mitre.org/data/definitions/1154.html"
        }
      }
    },
    {
      "id": "logout-without-session-reset",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "logout-without-session-reset",
        "title": "Logout without session reset",
        "description": "Determines when a user has been logged out from the application, but the session hasn't been cleared. When the session isn't cleared after logout, the session is vulnerable to a [session fixation attack](https://owasp.org/www-community/attacks/Session_fixation).",
        "url": "https://appland.com/docs/analysis/rules-reference.html#logout-without-session-reset",
        "labels": [
          "http.session.clear",
          "security.logout"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-488": "https://cwe.mitre.org/data/definitions/488.html",
          "OWASP - Session fixation": "https://owasp.org/www-community/attacks/Session_fixation",
          "Ruby on Rails - Session fixation countermeasures": "https://guides.rubyonrails.org/security.html#session-fixation-countermeasures"
        }
      }
    },
    {
      "id": "missing-authentication",
      "scope": "http_server_request",
      "impactDomain": "Security",
      "rule": {
        "id": "missing-authentication",
        "title": "Unauthenticated HTTP server request",
        "description": "An HTTP server request is missing authentication. In this case, the request may be serving assets that should be protected by authentication - but no authentication is actually happening.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-authentication",
        "labels": [
          "access.public",
          "security.authentication"
        ],
        "enumerateScope": false,
        "references": {
          "CWE-306": "https://cwe.mitre.org/data/definitions/306.html"
        }
      }
    },
    {
      "id": "missing-content-type",
      "scope": "http_server_request",
      "impactDomain": "Stability",
      "rule": {
        "id": "missing-content-type",
        "title": "HTTP server request without a Content-Type header",
        "description": "Finds HTTP server requests that don't provide a `Content-Type` header in the response.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#missing-content-type",
        "labels": [],
        "enumerateScope": false,
        "references": {}
      }
    },
    {
      "id": "n-plus-one-query",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "n-plus-one-query",
        "title": "N plus 1 SQL query",
        "description": "Finds occurrences of a query being repeated within a loop.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#n-plus-one-query",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1073": "https://cwe.mitre.org/data/definitions/1073.html"
        }
      }
    },
    {
      "id": "secret-in-log",
      "scope": "root",
      "impactDomain": "Security",
      "rule": {
        "id": "secret-in-log",
        "title": "Secret in log",
        "description": "Identifies when a known or assumed secret is written to a log. Logs are often transported into other systems that are treated with lesser security - such as backups. Therefore, secrets written into log files are more likely to be leaked or discovered by cyber-attackers.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#secret-in-log",
        "labels": [
          "secret",
          "log"
        ],
        "enumerateScope": true,
        "references": {
          "CWE-532": "https://cwe.mitre.org/data/definitions/532.html"
        }
      }
    },
    {
      "id": "too-many-joins",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "too-many-joins",
        "title": "Too many joins",
        "description": "Verifies that the number of joins in SQL queries does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-joins",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      }
    },
    {
      "id": "too-many-updates",
      "scope": "command",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "too-many-updates",
        "title": "Too many SQL and RPC updates performed in one command",
        "description": "Verifies that the number of SQL and RPC updates performed by a command does not exceed a threshold.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#too-many-updates",
        "labels": [],
        "enumerateScope": false,
        "references": {
          "CWE-1048": "https://cwe.mitre.org/data/definitions/1048.html"
        }
      }
    },
    {
      "id": "unbatched-materialized-query",
      "scope": "command",
      "impactDomain": "Performance",
      "rule": {
        "id": "unbatched-materialized-query",
        "title": "Unbatched materialized SQL query",
        "description": "Finds large data sets that are queried from the database and loaded into memory.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#unbatched-materialized-query",
        "labels": [
          "dao.materialize"
        ],
        "enumerateScope": true,
        "references": {
          "CWE-1049": "https://cwe.mitre.org/data/definitions/1049.html"
        }
      }
    },
    {
      "id": "update-in-get-request",
      "scope": "http_server_request",
      "impactDomain": "Maintainability",
      "rule": {
        "id": "update-in-get-request",
        "title": "Data update performed in GET or HEAD request",
        "description": "Finds SQL updates that are performed in an HTTP server `GET` request.",
        "url": "https://appland.com/docs/analysis/rules-reference.html#update-in-get-request",
        "labels": [
          "audit"
        ],
        "enumerateScope": true,
        "references": {}
      }
    }
  ]
}