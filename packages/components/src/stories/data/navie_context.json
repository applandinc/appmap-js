[
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/helpers/sessions_helper.rb:54",
        "content": "# Logs out the current user.\n  def log_out\n    forget(current_user)\n    reset_session\n    @current_user = nil\n  end\n\n  # Stores the URL trying to be accessed.\n  def store_location\n    session[:forwarding_url] = request.original_url if request.get? || request.head?\n  end\nend",
        "score": 5.563924544180424
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/helpers/sessions_helper.rb:35",
        "content": "# Returns true if the given user is the current user.\n  def current_user?(user)\n    user == current_user\n  end\n\n  # Returns true if the user is logged in, false otherwise.\n  # @label security.authentication\n  def logged_in?\n    !current_user.nil?\n  end\n\n  # Forgets a persistent session.\n  def forget(user)\n    user.forget if user\n    cookies.delete(:user_id)\n    cookies.delete(:remember_token)\n  end",
        "score": 2.3636720020623283
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/helpers/logged_in_helper.rb:10",
        "content": "module LoggedInHelper\n  # @label security.require_login\n  def logged_in_api_user\n    raise LoginError unless logged_in?\n    true\n  end\n\n  # Confirms a logged-in user.\n  # @label security.require_login\n  def logged_in_user\n    unless logged_in?\n      store_location\n      flash[:danger] = \"Please log in.\"\n      redirect_to login_url\n    end\n  end\nend",
        "score": 2.1875801699594923
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/helpers/sessions_helper.rb:16",
        "content": "# Returns the user corresponding to the remember token cookie.\n  def current_user\n    if (user_id = session[:user_id])\n      @current_user ||= User.find_by(id: user_id)\n    elsif (user_id = cookies.encrypted[:user_id])\n      user = User.find_by(id: user_id)\n      if user && user.authenticated?(:remember, cookies[:remember_token])\n        log_in user\n        @current_user = user\n      end\n    end\n  end",
        "score": 2.1933536726513885
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/controllers/microposts_controller.rb:28",
        "content": "def destroy\n    @micropost.destroy\n    flash[:success] = \"Micropost deleted\"\n    if request.referrer.nil? || request.referrer == microposts_url\n      redirect_to root_url\n    else\n      redirect_to request.referrer\n    end\n  end\n\n  def micropost_params\n    params.require(:micropost).permit(:content, :image)\n  end",
        "score": 7.559678597665379
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "location": "/home/user/land-of-apps/sample_app_6th_ed/tmp/appmap/minitest/Microposts_controller_should_redirect_create_when_not_logged_in.appmap.json:28",
        "type": "data-request",
        "content": "query:SELECT COUNT(*) FROM \"microposts\"",
        "score": 2.8163146131069947
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "location": "/home/user/land-of-apps/sample_app_6th_ed/tmp/appmap/minitest/Microposts_controller_should_redirect_create_when_not_logged_in.appmap.json:31",
        "type": "data-request",
        "content": "route:POST /microposts",
        "score": 2.3076690259509345
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "location": "/home/user/land-of-apps/sample_app_6th_ed/tmp/appmap/minitest/Microposts_controller_should_redirect_destroy_when_not_logged_in.appmap.json",
        "type": "sequence-diagram",
        "content": "@startuml\n!includeurl https://raw.githubusercontent.com/getappmap/plantuml-theme/main/appmap-theme.puml\nparticipant HTTP_server_requests as \"HTTP server requests\"\nparticipant activesupport as \"activesupport\"\nparticipant app_helpers as \"app/helpers\"\nparticipant actionpack as \"actionpack\"\n  [->HTTP_server_requests: DELETE /microposts/{id} (7.67 ms)\n  activate HTTP_server_requests\n    HTTP_server_requests->activesupport: invoke_before (0.727 ms)\n    activate activesupport\n      activesupport->app_helpers: logged_in_user (0.346 ms)\n      activate app_helpers\n        app_helpers->app_helpers: logged_in? (0.071 ms)\n        activate app_helpers\n          app_helpers->app_helpers: current_user (0.051 ms)\n          activate app_helpers\n            app_helpers->actionpack: [] (0.003 ms)\n            activate actionpack\n            app_helpers<--actionpack: void\n            deactivate actionpack\n            app_helpers->actionpack: [] (0.001 ms)\n            activate actionpack\n            app_helpers<--actionpack: void\n            deactivate actionpack\n          app_helpers<--app_helpers: void\n          deactivate app_helpers\n        app_helpers<--app_helpers: void\n        deactivate app_helpers\n        app_helpers->app_helpers: store_location (0.001 ms)\n        activate app_helpers\n        app_helpers<--app_helpers: void\n        deactivate app_helpers\n        app_helpers->actionpack: [] (0.002 ms)\n        activate actionpack\n        app_helpers<--actionpack: void\n        deactivate actionpack\n        app_helpers->actionpack: redirect_to (0.097 ms)\n        activate actionpack\n        app_helpers<--actionpack: string\n        deactivate actionpack\n      activesupport<--app_helpers: string\n      deactivate app_helpers\n    HTTP_server_requests<--activesupport: array\n    deactivate activesupport\n  [<--HTTP_server_requests: 302\n  deactivate HTTP_server_requests\n@enduml",
        "score": 2.1595
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/views/microposts/_micropost.html.erb",
        "content": "<li id=\"micropost-<%= micropost.id %>\">\n  <%= link_to gravatar_for(micropost.user, size: 50), micropost.user %>\n  <span class=\"user\"><%= link_to micropost.user.name, micropost.user %></span>\n  <span class=\"content\">\n    <%= micropost.content %>\n    <%= image_tag micropost.display_image if micropost.image.attached? %>\n  </span>\n  <span class=\"timestamp\">\n    Posted <%= time_ago_in_words(micropost.created_at) %> ago.\n    <% if current_user?(micropost.user) %>\n      <%= link_to \"delete\", micropost, method: :delete,\n                                       data: { confirm: \"You sure?\" } %>\n    <% end %>\n  </span>\n</li>\n",
        "score": 7.483311065297232
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/controllers/microposts_controller.rb:6",
        "content": "def create\n    @micropost = current_user.microposts.build(micropost_params)\n    @micropost.image.attach(params[:micropost][:image])\n    if @micropost.save\n      flash[:success] = \"Micropost created!\"\n      redirect_to root_url\n    else\n      @feed_items = current_user.feed.paginate(page: params[:page])\n      render 'static_pages/home'\n    end\n  end",
        "score": 6.658824558433717
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/views/shared/_micropost_form.html.erb",
        "content": "<%= form_with(model: @micropost, local: true) do |f| %>\n  <%= render 'shared/error_messages', object: f.object %>\n  <div class=\"field\">\n    <%= f.text_area :content, placeholder: \"Compose new micropost...\" %>\n  </div>\n  <%= f.submit \"Post\", class: \"btn btn-primary\" %>\n  <span class=\"image\">\n    <%= f.file_field :image, accept: \"image/jpeg,image/gif,image/png\" %>\n  </span>\n<% end %>\n\n<script type=\"text/javascript\">\n  $(\"#micropost_image\").bind(\"change\", function() {\n    const size_in_megabytes = this.files[0].size/1024/1024;\n    if (size_in_megabytes > 5) {\n      alert(\"Maximum file size is 5MB. Please choose a smaller file.\");\n      $(\"#micropost_image\").val(\"\");\n    }\n  });\n</script>\n",
        "score": 5.86969339062953
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/models/micropost.rb:13",
        "content": "# Returns a resized image for display.\n  def display_image\n    image.variant(resize_to_limit: [500, 500])\n  end\nend",
        "score": 4.4392163722891445
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/controllers/microposts_controller.rb:32",
        "content": "def correct_user\n    @micropost = current_user.microposts.find_by(id: params[:id])\n    # status: https://stackoverflow.com/questions/10472600/a-redirect-to-from-destroy-action-always-gets-delete-verb-whatever-method-i-dec/20978913\n    status = request.delete? ? 303 : 302\n    redirect_to root_url, status: status if @micropost.nil?\n  end\nend",
        "score": 5.262995772371473
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "location": "/home/user/land-of-apps/sample_app_6th_ed/tmp/appmap/minitest/Microposts_controller_should_redirect_destroy_for_wrong_micropost.appmap.json:23",
        "type": "data-request",
        "content": "query:SELECT \"microposts\".* FROM \"microposts\" WHERE \"microposts\".\"id\" = ? LIMIT ?",
        "score": 4.937019546244475
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "location": "app/models/user.rb:45",
        "content": "# @label secret\n  def User.new_reset_token\n    Base64.urlsafe_encode64 YAML.dump('operation' => 'reset', 'secret' => SecureRandom.bytes(200))\n  end\n\n  # Remembers a user in the database for use in persistent sessions.\n  def remember\n    self.remember_token = User.new_remember_token\n    update_attribute(:remember_digest, User.digest(remember_token))\n  end",
        "score": 2.5745757903002193
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "# SQLite. Versions 3.8.0 and up are supported.\n#   gem install sqlite3\n#\n#   Ensure the SQLite 3 gem is defined in your Gemfile\n#   gem 'sqlite3'\n#\ndefault: &default\n  adapter: sqlite3\n  pool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\n  timeout: 5000\n\ndevelopment:\n  <<: *default\n  database: db/development.sqlite3\n\n# Warning: The database defined as \"test\" will be erased and\n# re-generated from your development database when you run \"rake\".\n# Do not set this db to the same as development or production.\ntest:\n  <<: *default\n  database: db/test.sqlite3\n\nproduction:\n  adapter: postgresql\n  encoding: unicode\n  # For details on connection pooling, see Rails configuration guide\n  # https://guides.rubyonrails.org/configuring.html#database-pooling\n  pool: <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %>\n  database: sample_app_production\n  username: sample_app\n  password: <%= ENV['SAMPLE_APP_DATABASE_PASSWORD'] %>",
        "location": "config/database.yml:1-31"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "<% provide(:title, \"About\") %>\n<h1>About</h1>\n<p>\n  The <a href=\"https://www.railstutorial.org/\"><em>Ruby on Rails\n  Tutorial</em></a>, part of the\n  <a href=\"https://www.learnenough.com/\">Learn Enough</a> family of\n  tutorials, is a\n  <a href=\"https://www.railstutorial.org/book\">book</a> and\n  <a href=\"http://screencasts.railstutorial.org/\">screencast series</a>\n  to teach web development with\n  <a href=\"https://rubyonrails.org//\">Ruby on Rails</a>.\n  This is the sample app for the tutorial.\n</p>",
        "location": "app/views/static_pages/about.html.erb:1-13"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "# Ruby on Rails Tutorial sample application\n\nThis is the sample application for\n[*Ruby on Rails Tutorial:\nLearn Web Development with Rails*](https://www.railstutorial.org/)\n(6th Edition)\nby [Michael Hartl](http://www.michaelhartl.com/).\n\n## License\n\nAll source code in the [Ruby on Rails Tutorial](https://www.railstutorial.org/)\nis available jointly under the MIT License and the Beerware License. See\n[LICENSE.md](LICENSE.md) for details.\n\n## Getting started\n\nTo get started with the app, clone the repo and then install the needed gems:\n\n```\n$ bundle install --without production\n```\n\nNext, migrate the database:\n\n```\n$ rails db:migrate\n```\n\nFinally, run the test suite to verify that everything is working correctly:\n\n```\n$ rails test\n```\n\nIf the test suite passes, you'll be ready to run the app in a local server:\n\n```\n$ rails server\n```\n\nFor more information, see the\n[*Ruby on Rails Tutorial* book](https://www.railstutorial.org/book).",
        "location": "README.md:1-42"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "# Architecture\n\n## Login and session management\n\n### [Login a user (test/integration/users_login_test.rb)](tmp/appmap/minitest/Users_login_login_with_remembering.appmap.json)\n\nLogin is performed by SessionsController, without or without a remembering cookie.\n\n### [Require a logged-in user (test/integration/following_test.rb)](tmp/appmap/minitest/Following_followers_page.appmap.json)\n\nLogged-in user is enforced by a `before_action`. It's labeled `security.require_login`.\n\n## Submit a post\n\n### [Micropost integration test (test/integration/microposts_interface_test.rb)](tmp/appmap/minitest/Microposts_interface_micropost_interface.appmap.json).\n\nThis is a rather complex example, but it's comprehensive.",
        "location": "ARCHITECTURE.md:1-17"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "class MicropostsController < ApplicationController\n  before_action :logged_in_api_user, only: [:index]\n  before_action :logged_in_user, only: [:create, :destroy]\n  before_action :correct_user,   only: :destroy\n\n  def create\n    @micropost = current_user.microposts.build(micropost_params)\n    @micropost.image.attach(params[:micropost][:image])\n    if @micropost.save\n      flash[:success] = \"Micropost created!\"\n      redirect_to root_url\n    else\n      @feed_items = current_user.feed.paginate(page: params[:page])\n      render 'static_pages/home'\n    end\n  end\n\n  def destroy\n    @micropost.destroy\n    flash[:success] = \"Micropost deleted\"\n    if request.referrer.nil? || request.referrer == microposts_url\n      redirect_to root_url\n    else\n      redirect_to request.referrer\n    end\n  end\n\n  def micropost_params\n    params.require(:micropost).permit(:content, :image)\n  end",
        "location": "app/controllers/microposts_controller.rb:1-30"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "<li id=\"micropost-<%= micropost.id %>\">\n  <%= link_to gravatar_for(micropost.user, size: 50), micropost.user %>\n  <span class=\"user\"><%= link_to micropost.user.name, micropost.user %></span>\n  <span class=\"content\">\n    <%= micropost.content %>\n    <%= image_tag micropost.display_image if micropost.image.attached? %>\n  </span>\n  <span class=\"timestamp\">\n    Posted <%= time_ago_in_words(micropost.created_at) %> ago.\n    <% if current_user?(micropost.user) %>\n      <%= link_to \"delete\", micropost, method: :delete,\n                                       data: { confirm: \"You sure?\" } %>\n    <% end %>\n  </span>\n</li>",
        "location": "app/views/microposts/_micropost.html.erb:1-15"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "def micropost_params\n    params.require(:micropost).permit(:content, :image)\n  end\n\n  def correct_user\n    @micropost = current_user.microposts.find_by(id: params[:id])\n    # status: https://stackoverflow.com/questions/10472600/a-redirect-to-from-destroy-action-always-gets-delete-verb-whatever-method-i-dec/20978913\n    status = request.delete? ? 303 : 302\n    redirect_to root_url, status: status if @micropost.nil?\n  end\nend",
        "location": "app/controllers/microposts_controller.rb:28-38"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "module MicropostsHelper\nend",
        "location": "app/helpers/microposts_helper.rb:1-2"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "// Place all the styles related to the Microposts controller here.\n// They will automatically be included in application.css.\n// You can use Sass (SCSS) here: http://sass-lang.com/",
        "location": "app/assets/stylesheets/microposts.scss:1-3"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "location": "/home/user/land-of-apps/sample_app_6th_ed/tmp/appmap/minitest/Users_controller_should_redirect_edit_when_not_logged_in.appmap.json",
        "type": "sequence-diagram",
        "content": "@startuml\n!includeurl https://raw.githubusercontent.com/getappmap/plantuml-theme/main/appmap-theme.puml\nparticipant HTTP_server_requests as \"HTTP server requests\"\nparticipant activesupport as \"activesupport\"\nparticipant app_helpers as \"app/helpers\"\nparticipant actionpack as \"actionpack\"\n  [->HTTP_server_requests: GET /users/{id}/edit (8.06 ms)\n  activate HTTP_server_requests\n    HTTP_server_requests->activesupport: invoke_before (0.94 ms)\n    activate activesupport\n      activesupport->app_helpers: logged_in_user (0.454 ms)\n      activate app_helpers\n        app_helpers->app_helpers: logged_in? (0.074 ms)\n        activate app_helpers\n          app_helpers->app_helpers: current_user (0.054 ms)\n          activate app_helpers\n            app_helpers->actionpack: [] (0.003 ms)\n            activate actionpack\n            app_helpers<--actionpack: void\n            deactivate actionpack\n            app_helpers->actionpack: [] (0.001 ms)\n            activate actionpack\n            app_helpers<--actionpack: void\n            deactivate actionpack\n          app_helpers<--app_helpers: void\n          deactivate app_helpers\n        app_helpers<--app_helpers: void\n        deactivate app_helpers\n        app_helpers->app_helpers: store_location (0.105 ms)\n        activate app_helpers\n          app_helpers->actionpack: []= (0.057 ms)\n          activate actionpack\n          app_helpers<--actionpack: string\n          deactivate actionpack\n        app_helpers<--app_helpers: string\n        deactivate app_helpers\n        app_helpers->actionpack: [] (0.001 ms)\n        activate actionpack\n        app_helpers<--actionpack: void\n        deactivate actionpack\n        app_helpers->actionpack: redirect_to (0.1 ms)\n        activate actionpack\n        app_helpers<--actionpack: string\n        deactivate actionpack\n      activesupport<--app_helpers: string\n      deactivate app_helpers\n    HTTP_server_requests<--activesupport: array\n    deactivate activesupport\n  [<--HTTP_server_requests: 302\n  deactivate HTTP_server_requests\n@enduml",
        "score": 1.0305
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "class Micropost < ApplicationRecord\n  belongs_to       :user\n  has_one_attached :image\n  default_scope -> { order(created_at: :desc) }\n  validates :user_id, presence: true\n  validates :content, presence: true, length: { maximum: 140 }\n  validates :image,   content_type: { in: %w[image/jpeg image/gif image/png],\n                                      message: \"must be a valid image format\" },\n                      size: { less_than: 5.megabytes,\n                              message:   \"should be less than 5MB\" }\n\n  # Returns a resized image for display.\n  def display_image\n    image.variant(resize_to_limit: [500, 500])\n  end\nend",
        "location": "app/models/micropost.rb:1-16"
    },
    {
        "directory": "/home/user/land-of-apps/sample_app_6th_ed",
        "type": "code-snippet",
        "content": "orange:\n  content: \"I just ate an orange!\"\n  created_at: <%= 10.minutes.ago %>\n  user: michael\n\ntau_manifesto:\n  content: \"Check out the @tauday site by @mhartl: http://tauday.com\"\n  created_at: <%= 3.years.ago %>\n  user: michael\n\ncat_video:\n  content: \"Sad cats are sad: http://youtu.be/PKffm2uI4dk\"\n  created_at: <%= 2.hours.ago %>\n  user: michael\n\nmost_recent:\n  content: \"Writing a short test\"\n  created_at: <%= Time.zone.now %>\n  user: michael\n\n<% 30.times do |n| %>\nmicropost_<%= n %>:\n  content: <%= Faker::Lorem.sentence(word_count: 5) %>\n  created_at: <%= 42.days.ago %>\n  user: michael\n<% end %>\n\nants:\n  content: \"Oh, is that what you want? Because that's how you get ants!\"\n  created_at: <%= 2.years.ago %>\n  user: archer\n\nzone:\n  content: \"Danger zone!\"\n  created_at: <%= 3.days.ago %>\n  user: archer\n\ntone:\n  content: \"I'm sorry. Your words made sense, but your sarcastic tone did not.\"\n  created_at: <%= 10.minutes.ago %>\n  user: lana",
        "location": "test/fixtures/microposts.yml:1-41"
    }
]